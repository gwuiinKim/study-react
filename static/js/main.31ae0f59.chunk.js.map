{"version":3,"sources":["assets/noPoster.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Detail/Company.js","Components/Detail/ItemList.js","Components/Detail/Season.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","collection","tvApi","topRated","airingToday","tvDetail","HomeContainer","state","componentDidMount","_callee","_ref2","_ref3","_ref4","regenerator_default","wrap","_context","prev","next","sent","data","results","_this","setState","t0","console","log","finish","stop","_this$state","this","Home_HomePresenter","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","substr","SearchContainer","event","target","searchByTerm","preventDefault","Search_SearchPresenter","List","ul","Header_templateObject","Item","li","Header_templateObject2","current","SLink","Link","Header_templateObject3","Header","header","Header_templateObject4","withRouter","pathname","location","Company_templateObject","CompanyName","h3","Company_templateObject2","CompanyLogoContainer","Company_templateObject3","CompanyLogo","img","Company_templateObject4","Company","logo","name","Company_Container","src","ItemList_templateObject","Divider","ItemList_templateObject2","Button","button","ItemList_templateObject3","propTypes","result","PropTypes","object","ItemList","ItemList_Item","runtime","episode_run_time","genres","genre","index","rel","href","imdb_id","Season_templateObject","SeasonContainer","Season_templateObject2","Season_templateObject3","bgImage","Season_templateObject4","Season","Season_Container","seasons","season","Season_Poster","Season_Title","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","DetailPresenter_templateObject6","ItemContainer","_templateObject7","Language","_templateObject8","Overview","_templateObject9","VideoContainer","_templateObject10","VideoUrl","_templateObject11","CompanyContainer","_templateObject12","CollectionContainer","_templateObject13","Collection","_templateObject14","CollectionPoster","_templateObject15","DetailPresenter","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","Detail_ItemList","spoken_languages","languages","overview","videos","video","belongs_to_collection","production_companies","company","Detail_Company","logo_path","Detail_Season","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","mark","_this$props","push","parsedId","match","history","parseInt","isNaN","abrupt","includes","Detail_DetailPresenter","CollectionPresenter_templateObject","CollectionPresenter_templateObject2","CollectionPresenter_templateObject3","CollectionPresenter_templateObject4","ListContainer","CollectionPresenter_templateObject5","CollectionPresenter_templateObject6","Movie","CollectionPresenter_templateObject7","CollectionPresenter_templateObject8","CollectionPresenter_templateObject9","CollectionPresenter_templateObject10","CollectionPresenter","CollectionPresenter_Container","CollectionPresenter_Backdrop","CollectionPresenter_Content","CollectionPresenter_Cover","parts","CollectionPresenter_SLink","CollectionPresenter_Poster","CollectionPresenter_Data","CollectionPresenter_Title","lib_default","maxLine","ellipsis","trimRight","basedOn","isCollection","Collection_CollectionPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","Reset","App","Components_GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.31ae0f59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.06ea78e7.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏲\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"process\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  position: relative;\n  margin-bottom: 5px;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  opacity: 0.5;\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPoster.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {` ${rating}/10`}\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\nPoster.propTypes = {\n  id: PropTypes.number,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Movies | Inflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>Movies | Nomflix</title>\n      </Helmet>\n      {nowPlaying && nowPlaying.length > 0 && (\n        <Section title=\"Now Playing\">\n          {nowPlaying.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {upcoming && upcoming.length > 0 && (\n        <Section title=\"Upcoming Movies\">\n          {upcoming.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {popular && popular.length > 0 && (\n        <Section title=\"Popular Movies\">\n          {popular.map(movie => (\n            <Poster\n              key={movie.id}\n              id={movie.id}\n              imageUrl={movie.poster_path}\n              title={movie.original_title}\n              rating={movie.vote_average}\n              year={movie.release_date.substring(0, 4)}\n              isMovie={true}\n            />\n          ))}\n        </Section>\n      )}\n      {error && <Message color=\"#e74c3c\" text={error} />}\n    </Container>\n  );\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"1fe53fe4097a26e2c1c1dec05bab62ae\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  collection: id => api.get(`collection/${id}`)\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  tvDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React, { Component } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  componentDidMount = async () => {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"can't find movie information\"\n      });\n      console.log(this.state.error);\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Poster from \"../../Components/Poster\";\nimport Message from \"../../Components/Message\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Inflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React, { Component } from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  componentDidMount = async () => {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({\n        topRated,\n        popular,\n        airingToday\n      });\n    } catch {\n      this.setState({\n        error: \"can't find tv information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\n// 여러 개 동시에 복사 붙여넣기 할 때 각 component 별로 복사 붙여넣기 가능함.\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst Form = styled.form`\n  width: 100%;\n  margin-bottom: 50px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  all: unset;\n  font-size: 28px;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n  error\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Inflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 ? (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substr(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        ) : null}\n\n        {tvResults && tvResults.length > 0 ? (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substr(0, 4)}\n              />\n            ))}\n          </Section>\n        ) : null}\n      </>\n    )}\n    {error ? <Message color=\"#e74c3c\" text={error} /> : null}\n    {tvResults &&\n    movieResults &&\n    tvResults.length === 0 &&\n    movieResults.length === 0 ? (\n      <Message color=\"#95a5a6\" text=\"Nothing Found\" />\n    ) : null}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, { Component } from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    console.log(value);\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({\n      loading: true\n    });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({\n        error: \"can't find results.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.4s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n// Component에 css 할 때에는 styled(component)\n\nconst Header = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  background-color: rgba(20, 20, 20, 1);\n  z-index: 10;\n\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n`;\n\n// object destructing.\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin-top: 10px;\n  width: 100%;\n  height: 200px;\n`;\n\nconst CompanyName = styled.h3`\n  font-size: 14px;\n  text-align: center;\n  opacity: 0.5;\n  font-weight: 100;\n`;\nconst CompanyLogoContainer = styled.div`\n  height: 100px;\n  width: 80px;\n  display: flex;\n  align-items: center;\n`;\nconst CompanyLogo = styled.img`\n  width: 80px;\n  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),\n    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\n  opacity: 1;\n`;\n\nconst Company = ({ logo, name }) => (\n  <Container>\n    <CompanyLogoContainer>\n      {logo && (\n        <CompanyLogo src={`https://image.tmdb.org/t/p/original${logo}`} />\n      )}\n    </CompanyLogoContainer>\n    <CompanyName>{name}</CompanyName>\n  </Container>\n);\n\nCompany.propTypes = {\n  logo: PropTypes.string,\n  name: PropTypes.string\n};\n\nexport default Company;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Button = styled.button`\n  all: unset;\n  background-color: #e8b708;\n  color: black;\n  font-weight: 600;\n  width: 30px;\n  height: 12px;\n  padding: 3px 5px;\n  border-radius: 2px;\n`;\n\nconst ItemList = ({ result }) => (\n  <>\n    <Item>\n      {result.release_date\n        ? result.release_date.substring(0, 4)\n        : result.first_air_date && result.first_air_date.substring(0, 4)}\n    </Item>\n    <Divider>•</Divider>\n    <Item>\n      {result.runtime ? result.runtime : result.episode_run_time[0]} min\n    </Item>\n    <Divider>•</Divider>\n    <Item>\n      {result.genres &&\n        result.genres.map((genre, index) =>\n          index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n        )}\n    </Item>\n    <Divider>•</Divider>\n    <Item>\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={`https://www.imdb.com/title/${result.imdb_id}`}\n      >\n        <Button> IMDb</Button>\n      </a>\n    </Item>\n  </>\n);\n\nItem.propTypes = {\n  result: PropTypes.object\n};\n\nexport default ItemList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 120px;\n  margin-top: 80px;\n  display: flex;\n  z-index: 2;\n`;\nconst SeasonContainer = styled.div`\n  width: 100px;\n  height: 120px;\n  margin-right: 20px;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`;\n\nconst Poster = styled.div`\n  width: 100px;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Title = styled.h3`\n  text-align: center;\n  margin-top: 5px;\n`;\n\nconst Season = ({ result }) => (\n  <Container>\n    {result.seasons.map(season => (\n      <Link to={`/tv/${season.id}`}>\n        <SeasonContainer key={season.id}>\n          <Poster\n            bgImage={`https://image.tmdb.org/t/p/original${season.poster_path}`}\n          />\n          <Title>{season.name}</Title>\n        </SeasonContainer>\n      </Link>\n    ))}\n  </Container>\n);\n\nSeason.propTypes = {\n  result: PropTypes.object\n};\n\nexport default Season;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport { Link } from \"react-router-dom\";\nimport Company from \"../../Components/Detail/Company\";\nimport ItemList from \"../../Components/Detail/ItemList\";\nimport Season from \"../../Components/Detail/Season\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.2;\n  z-index: -1;\n`;\n\n// 인스타 그램에서처럼 다운로드 못하게 하는 것 같은 기능\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\n\nconst Data = styled.div`\n  margin-left: 20px;\n  width: 70%;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nconst Language = styled.span`\n  margin-right: 5px;\n  background-color: #3498db;\n  padding: 3px;\n  border-radius: 4px;\n  text-align: center;\n  font-weight: 600;\n  color: white;\n`;\n\n// const Divider = styled.span`\n//   margin: 0 10px;\n// `;\n\nconst Overview = styled.p`\n  margin-top: 10px;\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst VideoContainer = styled.div`\n  width: 100%;\n  height: 50px;\n  margin-top: 15px;\n  font-size: 15px;\n  color: #e67e22;\n`;\n\nconst VideoUrl = styled.span`\n  width: 100%;\n  display: block;\n  margin-top: 10px;\n  & :hover {\n    box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),\n      0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\n  }\n`;\n\nconst CompanyContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 80px);\n  grid-gap: 40px;\n  margin-top: 30px;\n`;\n\nconst CollectionContainer = styled.div`\n  width: 120px;\n  height: 120px;\n  margin-top: 15px;\n  & :hover {\n    box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),\n      0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\n  }\n`;\n\nconst Collection = styled.div``;\nconst CollectionPoster = styled.img`\n  width: 100px;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Inflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Inflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPoster.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <ItemList result={result} />\n          </ItemContainer>\n          {result.spoken_languages && result.spoken_languages.length > 0\n            ? result.spoken_languages.map(language => (\n                <Language> {language.name} </Language>\n              ))\n            : result.languages &&\n              result.languages.map(language => (\n                <Language> {language} </Language>\n              ))}\n\n          <Overview>{result.overview}</Overview>\n          <VideoContainer>\n            {result.videos.results &&\n              result.videos.results.length > 0 &&\n              result.videos.results.map(\n                (video, index) =>\n                  index < 2 && (\n                    // <Section title=\"Video Trailer\">\n                    //   {`https://www.youtube.com/watch?v=${video.key}` }\n                    // </Section>\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={`https://www.youtube.com/watch?v=${video.key}`}\n                    >\n                      <VideoUrl key={video.id}>{video.name}</VideoUrl>\n                    </a>\n                  )\n              )}\n          </VideoContainer>\n\n          {result.belongs_to_collection && result.belongs_to_collection.id && (\n            <CollectionContainer>\n              <Link to={`/collection/${result.belongs_to_collection.id}`}>\n                <CollectionPoster\n                  src={`https://image.tmdb.org/t/p/original${\n                    result.belongs_to_collection.poster_path\n                  }`}\n                />\n                <Collection>{result.belongs_to_collection.name} </Collection>\n              </Link>\n            </CollectionContainer>\n          )}\n          {result.production_companies &&\n            result.production_companies.length > 0 && (\n              <CompanyContainer>\n                {result.production_companies.map(company => (\n                  <Company logo={company.logo_path} name={company.name} />\n                ))}\n              </CompanyContainer>\n            )}\n          {result.seasons && result.seasons.length > 0 && (\n            <Season result={result} />\n          )}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React, { Component } from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: () => pathname.includes(\"/movie/\")\n    };\n  }\n  componentDidMount = async () => {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie()) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n        // const request = await moviesApi.movieDetail(parsedId);\n        // result = request.data;\n      } else {\n        ({ data: result } = await tvApi.tvDetail(parsedId));\n        // result = request.data;\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\"\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result\n      });\n    }\n  };\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"../../Components/Loader\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  padding: 50px;\n  z-index: 1;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(4px);\n  opacity: 0.15;\n  z-index: -1;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  z-index: 2;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n  margin-right: 20px;\n`;\n\nconst ListContainer = styled.div`\n  margin-left: 20px;\n  width: 60%;\n  height: 100%;\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n  height: 200px;\n  z-index: 1;\n`;\n\nconst Movie = styled.div`\n  height: 200px;\n  width: 100%;\n  margin-bottom: 20px;\n  display: flex;\n  & :hover {\n    opacity: 0.7;\n  }\n`;\n\nconst Poster = styled.div`\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  width: 120px;\n  height: 200px;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n  padding: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nconst CollectionPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title> Loading | Inflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.name} | Inflix</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`}\n        />\n        <ListContainer>\n          {result.parts &&\n            result.parts.length > 0 &&\n            result.parts.map(movie => (\n              <SLink to={`/movie/${movie.id}`} key={movie.id}>\n                <Movie>\n                  <Poster\n                    bgImage={`https://image.tmdb.org/t/p/original${\n                      movie.poster_path\n                    }`}\n                  />\n                  <Data>\n                    <Title>{movie.title}</Title>\n                    <LinesEllipsis\n                      text={movie.overview}\n                      maxLine=\"3\"\n                      ellipsis=\"...\"\n                      trimRight\n                      basedOn=\"letters\"\n                    />\n                  </Data>\n                </Movie>\n              </SLink>\n            ))}\n        </ListContainer>\n      </Content>\n    </Container>\n  );\n\nCollectionPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default CollectionPresenter;\n","import CollectionContainer from \"./CollectionContainer\";\n\nexport default CollectionContainer;\n","import React, { Component } from \"react\";\nimport CollectionPresenter from \"./CollectionPresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isCollection: pathname.includes(\"/collection/\")\n    };\n  }\n\n  componentDidMount = async () => {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isCollection } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isCollection) {\n        ({ data: result } = await moviesApi.collection(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\"\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result\n      });\n    }\n  };\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(result);\n    return (\n      <CollectionPresenter result={result} error={error} loading={loading} />\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Header from \"./Header\";\nimport Detail from \"../Routes/Detail\";\nimport Collection from \"../Routes/Collection\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" exact component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Route path=\"/collection/:id\" component={Collection} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n\n// Switch 는 한번에 하나의 route 만 작동하게 만들어준다. 없으면 Redirect도 동시에 됨..\n// exact는 정확하게 그 route에 일치할 때에만.\n","import Reset from \"styled-reset\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${Reset};\n    a {\n        text-decoration:none;\n        color:inherit;\n    }\n\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n\n    };\n    \n`;\n\n// styled css 안에 Component 를 넣으려면 ${}\n\nexport default GlobalStyles;\n","import React from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Router />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}